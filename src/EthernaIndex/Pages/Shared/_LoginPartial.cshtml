@*@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager*@

@using System.Text.Encodings.Web;
@inject IOptions<SsoServerSettings> SsoServerSettings

<ul class="navbar-nav">
@*@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post" >
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{ }*@

    @{ 
        var returnUrl = HtmlEncoder.Default.Encode($"{Context.Request.Scheme}://{Context.Request.Host}");
        var loginUrl = $"{SsoServerSettings.Value.LoginUrl}?returnUrl={returnUrl}";
        var registerUrl = $"{SsoServerSettings.Value.RegisterUrl}?returnUrl={returnUrl}";
    }

    <li class="nav-item">
        <a class="nav-link text-dark" href="@registerUrl">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" href="@loginUrl">Login</a>
    </li>

</ul>
